<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.purchase.dao.mapper.UserMapper">

    <resultMap type="com.purchase.dao.po.User" id="UserMap">
        <result property="userId" column="userId" jdbcType="INTEGER"/>
        <result property="username" column="username" jdbcType="VARCHAR"/>
        <result property="password" column="password" jdbcType="VARCHAR"/>
        <result property="email" column="email" jdbcType="VARCHAR"/>
        <result property="tel" column="tel" jdbcType="VARCHAR"/>
        <result property="realname" column="realname" jdbcType="VARCHAR"/>
        <result property="sex" column="sex" jdbcType="INTEGER"/>
        <result property="idNumber" column="idNumber" jdbcType="VARCHAR"/>
        <result property="birth" column="birth" jdbcType="TIMESTAMP"/>
        <result property="createTime" column="createTime" jdbcType="TIMESTAMP"/>
        <result property="createUserId" column="createUserId" jdbcType="INTEGER"/>
        <result property="roleId" column="roleId" jdbcType="INTEGER"/>
        <result property="departmentId" column="departmentId" jdbcType="INTEGER"/>
        <result property="state" column="state" jdbcType="INTEGER"/>
        <result property="emailNotice" column="emailNotice" jdbcType="INTEGER"/>
        <result property="avatar" column="avatar" jdbcType="VARCHAR"/>
        <result property="isDelete" column="isDelete" jdbcType="INTEGER"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="UserMap">
        select
          userId, username, password, email, tel, realname, sex, idNumber, birth, createTime, createUserId, roleId, departmentId, state, emailNotice, avatar, isDelete
        from t_user
        where userId = #{userId}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="UserMap">
        select
          userId, username, password, email, tel, realname, sex, idNumber, birth, createTime, createUserId, roleId, departmentId, state, emailNotice, avatar, isDelete
        from t_user
        <where>
            <if test="userId != null">
                and userId = #{userId}
            </if>
            <if test="username != null and username != ''">
                and username = #{username}
            </if>
            <if test="password != null and password != ''">
                and password = #{password}
            </if>
            <if test="email != null and email != ''">
                and email = #{email}
            </if>
            <if test="tel != null and tel != ''">
                and tel = #{tel}
            </if>
            <if test="realname != null and realname != ''">
                and realname = #{realname}
            </if>
            <if test="sex != null">
                and sex = #{sex}
            </if>
            <if test="idNumber != null and idNumber != ''">
                and idNumber = #{idNumber}
            </if>
            <if test="birth != null">
                and birth = #{birth}
            </if>
            <if test="createTime != null">
                and createTime = #{createTime}
            </if>
            <if test="createUserId != null">
                and createUserId = #{createUserId}
            </if>
            <if test="roleId != null">
                and roleId = #{roleId}
            </if>
            <if test="departmentId != null">
                and departmentId = #{departmentId}
            </if>
            <if test="state != null">
                and state = #{state}
            </if>
            <if test="emailNotice != null">
                and emailNotice = #{emailNotice}
            </if>
            <if test="avatar != null and avatar != ''">
                and avatar = #{avatar}
            </if>
            <if test="isDelete != null">
                and isDelete = #{isDelete}
            </if>
        </where>
        limit #{pageable.offset}, #{pageable.pageSize}
    </select>

    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(1)
        from t_user
        <where>
            <if test="userId != null">
                and userId = #{userId}
            </if>
            <if test="username != null and username != ''">
                and username = #{username}
            </if>
            <if test="password != null and password != ''">
                and password = #{password}
            </if>
            <if test="email != null and email != ''">
                and email = #{email}
            </if>
            <if test="tel != null and tel != ''">
                and tel = #{tel}
            </if>
            <if test="realname != null and realname != ''">
                and realname = #{realname}
            </if>
            <if test="sex != null">
                and sex = #{sex}
            </if>
            <if test="idNumber != null and idNumber != ''">
                and idNumber = #{idNumber}
            </if>
            <if test="birth != null">
                and birth = #{birth}
            </if>
            <if test="createTime != null">
                and createTime = #{createTime}
            </if>
            <if test="createUserId != null">
                and createUserId = #{createUserId}
            </if>
            <if test="roleId != null">
                and roleId = #{roleId}
            </if>
            <if test="departmentId != null">
                and departmentId = #{departmentId}
            </if>
            <if test="state != null">
                and state = #{state}
            </if>
            <if test="emailNotice != null">
                and emailNotice = #{emailNotice}
            </if>
            <if test="avatar != null and avatar != ''">
                and avatar = #{avatar}
            </if>
            <if test="isDelete != null">
                and isDelete = #{isDelete}
            </if>
        </where>
    </select>

    <!--新增所有列-->
<!--    <insert id="insert" keyProperty="userId" useGeneratedKeys="true">-->
<!--        insert into t_user(username, password, email, tel, realname, sex, idNumber, birth, createTime, createUserId, roleId, departmentId, state, emailNotice, avatar, isDelete)-->
<!--        values (#{username}, #{password}, #{email}, #{tel}, #{realname}, #{sex}, #{idNumber}, #{birth}, #{createTime}, #{createUserId}, #{roleId}, #{departmentId}, #{state}, #{emailNotice}, #{avatar}, #{isDelete})-->
<!--    </insert>-->

    <insert id="insertBatch" keyProperty="userId" useGeneratedKeys="true">
        insert into t_user(username, password, email, tel, realname, sex, idNumber, birth, createTime, createUserId, roleId, departmentId, state, emailNotice, avatar, isDelete)
        values
        <foreach collection="entities" item="entity" separator=",">
        (#{entity.username}, #{entity.password}, #{entity.email}, #{entity.tel}, #{entity.realname}, #{entity.sex}, #{entity.idNumber}, #{entity.birth}, #{entity.createTime}, #{entity.createUserId}, #{entity.roleId}, #{entity.departmentId}, #{entity.state}, #{entity.emailNotice}, #{entity.avatar}, #{entity.isDelete})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="userId" useGeneratedKeys="true">
        insert into t_user(username, password, email, tel, realname, sex, idNumber, birth, createTime, createUserId, roleId, departmentId, state, emailNotice, avatar, isDelete)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.username}, #{entity.password}, #{entity.email}, #{entity.tel}, #{entity.realname}, #{entity.sex}, #{entity.idNumber}, #{entity.birth}, #{entity.createTime}, #{entity.createUserId}, #{entity.roleId}, #{entity.departmentId}, #{entity.state}, #{entity.emailNotice}, #{entity.avatar}, #{entity.isDelete})
        </foreach>
        on duplicate key update
        username = values(username),
        password = values(password),
        email = values(email),
        tel = values(tel),
        realname = values(realname),
        sex = values(sex),
        idNumber = values(idNumber),
        birth = values(birth),
        createTime = values(createTime),
        createUserId = values(createUserId),
        roleId = values(roleId),
        departmentId = values(departmentId),
        state = values(state),
        emailNotice = values(emailNotice),
        avatar = values(avatar),
        isDelete = values(isDelete)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update t_user
        <set>
            <if test="username != null and username != ''">
                username = #{username},
            </if>
            <if test="password != null and password != ''">
                password = #{password},
            </if>
            <if test="email != null and email != ''">
                email = #{email},
            </if>
            <if test="tel != null and tel != ''">
                tel = #{tel},
            </if>
            <if test="realname != null and realname != ''">
                realname = #{realname},
            </if>
            <if test="sex != null">
                sex = #{sex},
            </if>
            <if test="idNumber != null and idNumber != ''">
                idNumber = #{idNumber},
            </if>
            <if test="birth != null">
                birth = #{birth},
            </if>
            <if test="createTime != null">
                createTime = #{createTime},
            </if>
            <if test="createUserId != null">
                createUserId = #{createUserId},
            </if>
            <if test="roleId != null">
                roleId = #{roleId},
            </if>
            <if test="departmentId != null">
                departmentId = #{departmentId},
            </if>
            <if test="state != null">
                state = #{state},
            </if>
            <if test="emailNotice != null">
                emailNotice = #{emailNotice},
            </if>
            <if test="avatar != null and avatar != ''">
                avatar = #{avatar},
            </if>
            <if test="isDelete != null">
                isDelete = #{isDelete},
            </if>
        </set>
        where userId = #{userId}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from t_user where userId = #{userId}
    </delete>

    <update id="deleteDepartmentId">
        update t_user set departmentId=null where departmentId=#{departmentId}
    </update>


    <select id="getUserBos" resultMap="UserBo">
        select * from t_user where isDelete=0
        <if test="param.username != null and param.username != ''">
            and username like  concat('%',#{param.username},'%')
        </if>
        <if test="param.realname != null and param.realname != ''">
            and realname like  concat('%',#{param.realname},'%')
        </if>
        <if test="param.tel != null and param.tel != ''">
            and tel like  concat('%',#{param.tel},'%')
        </if>
        <if test="param.idNumber != null and param.idNumber != ''">
            and idNumber like  concat('%',#{param.idNumber},'%')
        </if>
        <if test="param.sex != null">
            and sex = ${param.sex}
        </if>
        <if test="param.state != null">
            and state = ${param.state}
        </if>
        <if test="param.roleId != null">
            and roleId = ${param.roleId}
        </if>
        <if test="param.departmentId != null">
            and departmentId = ${param.departmentId}
        </if>
        <if test="param.startCreateTime != null and param.endCreateTime != null and param.startCreateTime != '' and param.endCreateTime != ''">
            and DATE(createTime) between DATE(#{param.startCreateTime}) and DATE(#{param.endCreateTime})
        </if>
        <if test="param.orderBys != null and param.orderBys.size() > 0">
            order by
            <foreach collection="param.orderBys" index="index" item="orderBy" separator=",">
                <if test="orderBy.field =='createTime'">
                    createTime
                </if>
                <if test="orderBy.field =='birth'">
                    birth
                </if>
                <if test="orderBy.way == 'asc'">
                    asc
                </if>
                <if test="orderBy.way == 'desc'">
                    desc
                </if>
            </foreach>
        </if>
    </select>
    <resultMap id="UserBo" type="com.purchase.dao.bo.UserBo">
        <result property="userId" column="userId" />
        <association property="user" javaType="com.purchase.dao.po.User" resultMap="UserMap" />
        <association property="createUser" javaType="com.purchase.dao.po.User"
                     column="createUserId" select="com.purchase.dao.mapper.UserMapper.selectById" />
        <association property="role" javaType="com.purchase.dao.po.Role"
                     column="roleId" select="com.purchase.dao.mapper.RoleMapper.selectById" />
        <association property="department" javaType="com.purchase.dao.po.Department"
                     column="departmentId" select="com.purchase.dao.mapper.DepartmentMapper.selectById" />
    </resultMap>


    <update id="updateUser">
        update t_user
        <set>
            <if test="param.username != null and param.username != ''">
                username = #{param.username},
            </if>
            <if test="param.password != null and param.password != ''">
                password = #{param.password},
            </if>
            <if test="param.email != null and param.email != ''">
                email = #{param.email},
            </if>
            <if test="param.tel != null and param.tel != ''">
                tel = #{param.tel},
            </if>
            <if test="param.realname != null and param.realname != ''">
                realname = #{param.realname},
            </if>
            <if test="param.sex != null">
                sex = #{param.sex},
            </if>
            <if test="param.idNumber != null and param.idNumber != ''">
                idNumber = #{param.idNumber},
            </if>
            <if test="param.birth != null">
                birth = #{param.birth},
            </if>
<!--            <if test="param.createTime != null">-->
<!--                createTime = #{param.createTime},-->
<!--            </if>-->
<!--            <if test="param.createUserId != null">-->
<!--                createUserId = #{param.createUserId},-->
<!--            </if>-->
            <if test="param.roleId != null">
                roleId = #{param.roleId},
            </if>
            <if test="param.departmentId != null">
                departmentId = #{param.departmentId},
            </if>
            <if test="param.state != null">
                state = #{param.state},
            </if>
            <if test="param.emailNotice != null">
                emailNotice = #{param.emailNotice},
            </if>
            <if test="param.avatar != null and param.avatar != ''">
                avatar = #{param.avatar},
            </if>
        </set>
        where userId = #{param.userId} and isDelete=0
    </update>

    <update id="upateUserState">
        update t_user set state=#{state} where isDelete=0 and userId=#{userId}
    </update>

    <update id="setRoleIdNull">
        update t_user set roleId=null where userId=#{userId} and isDelete=0
    </update>
</mapper>

